<?php

/**
 * @file
 * Contains sdv_gis.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function sdv_gis_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the sdv_gis module.
    case 'help.page.sdv_gis':
      $output = ''.var_export($_GET,true);
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('TODO Module description here ...') . '</p>';
      return $output;

    default:
      $output = 'Hallo wereld: '.var_export($_GET,true);
      return $output;
  }
}

function sdv_gis_theme($existing, $type, $theme, $path) {
  $theme = [
     'sdv_gis_entity' => [
      'path' => $path . '/templates',
      'template'  => 'sdv_gis_entity',
      'render element' => 'elements',
    ],
  ];
  return $theme;
}

/**
 * Prepares variables for templates.
 * implements hook_preprocess_HOOK()
 */
function template_preprocess_sdv_gis_entity(&$variables) {
	// Helpful $content variable for templates.
	$variables['content'] = [];
	foreach (\Drupal\Core\Render\Element::children($variables['elements']) as $key) {
	$variables['content'][$key] = $variables['elements'][$key];
	}
  
	$uiterlijk='groen';

	$parms='';
	// gewone parameters klaar zetten
	$body=$variables['elements']['gis_ia_params'][0]['#context']['value'];
	$body=preg_replace("/\r\n/","\r",$body);
	$body=preg_replace("/\n/","\r",$body);
	$body=explode("\r",$body);
	foreach ($body as $b) {
		if (substr($b,0,2)=='m=') {$b='m='.base64_encode(htmlspecialchars(trim(substr($b,2))));}
		$parms.=($parms==''?'':',').$b;
		if (substr($b,0,2)=='u=') {$uiterlijk=substr($b,2);}
	}
	// layer_definities er achter plakken
	$ldefs=str_replace("\r\n","\r",$variables['elements']['gis_ia_layers'][0]['#context']['value']);
	$ldefs=str_replace("\n","\r",$ldefs);
	$ldefs=explode("\r",$ldefs);
	$parms.=',ld=';
	foreach ($ldefs as $ldef) {
		if ($ldef!='') {$parms.=base64_encode($ldef).'|';}
	}
	
	$variables['node_id']=$variables['elements']['#contextual_links']['sdv_gis_entity']['route_parameters']['sdv_gis_entity'];
	$variables['dwnld']=__DIR__;
	$variables['parms']=$parms;
}

/**
 * Implements hook_entity_view() for sdv_gis_entity_view()
 *
 * Sets the right libraries and pass data to twig-file.
 */
function sdv_gis_entity_view(array &$build, \Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display, $view_mode) {
//if (file_exists('/var/www/html/drupal/published/rob')) {$deb=file_get_contents('/var/www/html/drupal/published/rob');} else {$deb='';}
//file_put_contents('/var/www/html/drupal/published/rob','$entity='.json_encode($entity->get('gis_ia_params')->first()->getValue()['value']).chr(13).$deb);	
    if ($entity->bundle()=='sdv_gis_entity') {
        
		$uiterlijk='groen';
		$body=$entity->get('gis_ia_params')->first()->getValue()['value'];
		$body=preg_replace("/\r\n/","\r",$body);
		$body=preg_replace("/\n/","\r",$body);
		$body=explode("\r",$body);
		foreach ($body as $b) {
			if (substr($b,0,2)=='u=') {$uiterlijk=substr($b,2);}
		}
		// basis library
        $build['#attached']['library'][] = 'sdv_gis/sdv_gis';
		
		// aanvullen met specifieke library
		$build['#attached']['library'][] = 'sdv_gis/sdv_gis_'.$uiterlijk;
    }
}

/**
 * Implements hook_form_alter() for sdv_gis_form_alter()
 *
 * Sets the right libraries and pass data to javascript functions about several sources of layers.
 *
 * The layers for each layer-type are read from different sources:
 *     - WMS:		  The layers are read from the server via a GetCapabilities request
 *	   - WMSinput:	  Uses the layers from WMS
 *	   - datarivmnl:  Reads layers from cached-file or via a GetRecords request (followed by an GetRecordsById request per layer)
 *	   - Vectortile:  The layers are read from the server via a bare tms request
 *
 */

function sdv_gis_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
//if (file_exists('/var/www/html/drupal/published/rob')) {$deb=file_get_contents('/var/www/html/drupal/published/rob');} else {$deb='';}
//file_put_contents('/var/www/html/drupal/published/rob','$form_id='.json_encode($form_id).' $form_state='.json_encode($form_state).chr(13).$deb);	
    if ($form_id == 'sdv_gis_entity_add_form' || $form_id == 'sdv_gis_entity_edit_form') {
		
        $form['#attached']['library'][] = 'sdv_gis/sdv_gis_edit';

        $xml=simplexml_load_file('https://geodata.rivm.nl/geoserver/wms?VERSION=1.1.1&REQUEST=GetCapabilities');
        $wms='';
        if ($xml->Capability->Layer) foreach ($xml->Capability->Layer->children() as $layer) {
            $name=$layer->Name;
            $title=$layer->Title;
            if ($name!='') {
                $wms.=($wms==''?'':'|').$name.'='.$title;
            }
        }
        $form['#attached']['drupalSettings']['gis_ia']['wms'] = $wms;
        $xml=simplexml_load_file('https://acceptatie.geodata.rivm.nl/geoserver/wms?VERSION=1.1.1&REQUEST=GetCapabilities');
        $wms='';
        if ($xml->Capability->Layer) foreach ($xml->Capability->Layer->children() as $layer) {
            $name=$layer->Name;
            $title=$layer->Title;
            if ($name!='') {
                $wms.=($wms==''?'':'|').$name.'='.$title;
            }
        }
        $form['#attached']['drupalSettings']['gis_ia']['wmsacceptatie'] = $wms;

		$readFromServer=true; $fname='/var/www/html/drupal/published/datarivmnl.def';
		if (file_exists($fname)) {$readFromServer=false;}
		if ($readFromServer) {
			$xml=file_get_contents('https://data.rivm.nl/geonetwork/srv/dut/csw-ngr?service=CSW&resultType=results&version=2.0.2&request=GetRecords&MaxRecords=1000');
			$xml=preg_replace("/(<\/?)(\w+):([^>]*>)/", "$1$2$3", $xml);
			$xml=new SimpleXMLElement($xml);
			$wms='';
			foreach ($xml->cswSearchResults->children() as $layer) {
				$layerXML=file_get_contents('https://data.rivm.nl/geonetwork/srv/dut/csw-ngr?request=GetRecordById&service=CSW&version=2.0.2&elementSetName=full&id='.$layer->dcidentifier);
				$layerXML=preg_replace("/(<\/?)(\w+):([^>]*>)/", "$1$2$3", $layerXML);
				$layerXML=new SimpleXMLElement($layerXML);
				if ($layer->dctitle!='') {
					foreach ($layerXML->cswRecord->children() as $key=>$value) if ($key=='dcURI' && $value['protocol']=='OGC:WMS') {
						$server=$value[0];
						if (substr($server,-1,1)=='?') {$server=substr($server,0,strlen($server)-1);}
						if (substr($server,-1,1)=='/') {$server=substr($server,0,strlen($server)-1);}
						if ($server!='' && $value['name']!='') {
							$wms.=($wms==''?'':'|');
							$wms.=$server.'='.$layer->dctitle.'='.$value['name'];
						}
					}
				}
			}
			file_put_contents($fname,$wms);
		} else {
			$wms=file_get_contents($fname);
		}
        $form['#attached']['drupalSettings']['gis_ia']['datarivmnl'] = $wms;
    }
}
